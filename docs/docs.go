// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/borrowers": {
            "get": {
                "description": "Get a list of all borrowers with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "borrowers"
                ],
                "summary": "List all borrowers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by full name",
                        "name": "full_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by phone number",
                        "name": "phone_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by ID number",
                        "name": "id_number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of borrowers",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/domain.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/borrower.Borrower"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Register a new borrower in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "borrowers"
                ],
                "summary": "Create a new borrower",
                "parameters": [
                    {
                        "description": "Borrower information",
                        "name": "borrower",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateBorrowerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Borrower created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/borrower.Borrower"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request or validation error",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        },
        "/employees": {
            "get": {
                "description": "Get a list of all employees with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "List all employees",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by full name",
                        "name": "full_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by phone number",
                        "name": "phone_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by ID number",
                        "name": "id_number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of employees",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/domain.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/employee.Employee"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Register a new employee in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Create a new employee",
                "parameters": [
                    {
                        "description": "Employee information",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateEmployeeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Employee created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/employee.Employee"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request or validation error",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        },
        "/lenders": {
            "get": {
                "description": "Get a list of all lenders with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lenders"
                ],
                "summary": "List all lenders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by full name",
                        "name": "full_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by phone number",
                        "name": "phone_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by ID number",
                        "name": "id_number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of lenders",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/domain.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/lender.Lender"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Register a new lender in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lenders"
                ],
                "summary": "Create a new lender",
                "parameters": [
                    {
                        "description": "Lender information",
                        "name": "lender",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateLenderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Lender created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/lender.Lender"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request or validation error",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        },
        "/loans": {
            "get": {
                "description": "Get a list of all loans with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "loans"
                ],
                "summary": "List all loans",
                "parameters": [
                    {
                        "type": "number",
                        "description": "Maximum loan amount",
                        "name": "max_amount",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum loan amount",
                        "name": "min_amount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.PaginatedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new loan with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "loans"
                ],
                "summary": "Create a new loan",
                "parameters": [
                    {
                        "description": "Loan information",
                        "name": "loan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateLoanRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        },
        "/loans/{id}/{status}": {
            "patch": {
                "description": "Update a loan's status based on the provided status transition\n- For approve: { \"success\": true, \"message\": \"Loan status updated successfully\" }\n- For partial invest: { \"success\": true, \"data\": { \"remaining_amount\": 150000, \"invested_amount\": 50000, \"agreement_document\": null }, \"message\": \"loan invested successfully\" }\n- For full invest: { \"success\": true, \"data\": { \"remaining_amount\": 0, \"invested_amount\": 200000, \"agreement_document\": \"agreement_file.pdf\" }, \"message\": \"loan status updated to invested\" }\n- For disburse: { \"success\": true, \"data\": { \"field_officer_id\": \"emp-789\", \"agreement_file_name\": \"agreement.pdf\" }, \"message\": \"loan disbursed successfully\" }",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "loans"
                ],
                "summary": "Update loan status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Loan ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New status",
                        "name": "status",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Status update information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "description": "Approve request (when status=approve)",
                        "name": "approveRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/swagger.ApproveSchema"
                        }
                    },
                    {
                        "description": "Invest request (when status=invest)",
                        "name": "investRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/swagger.InvestSchema"
                        }
                    },
                    {
                        "description": "Disburse request (when status=disburse)",
                        "name": "disburseRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/swagger.DisburseSchema"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful status update with varying response structure based on status",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request or status transition",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "borrower.Borrower": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_number": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.PaginatedResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "pagination": {
                    "$ref": "#/definitions/domain.PaginationInfo"
                }
            }
        },
        "domain.PaginationInfo": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_items": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "employee.Employee": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_number": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "lender.Lender": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "idnumber": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "request.CreateBorrowerRequest": {
            "type": "object",
            "required": [
                "email",
                "fullName",
                "idNumber",
                "phoneNumber"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "idNumber": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "request.CreateEmployeeRequest": {
            "type": "object",
            "required": [
                "email",
                "fullName",
                "idNumber",
                "phoneNumber"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "idNumber": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "request.CreateLenderRequest": {
            "type": "object",
            "required": [
                "email",
                "fullName",
                "idNumber",
                "phoneNumber"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "idNumber": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "request.CreateLoanRequest": {
            "type": "object",
            "required": [
                "amount",
                "borrowerId",
                "rate",
                "roi"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "borrowerId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "rate": {
                    "type": "number"
                },
                "roi": {
                    "type": "number"
                }
            }
        },
        "response.APIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "swagger.ApproveSchema": {
            "type": "object",
            "properties": {
                "approval_date": {
                    "type": "string",
                    "example": "2025-03-25"
                },
                "approval_employee_id": {
                    "type": "string",
                    "example": "emp-123"
                },
                "file_name": {
                    "type": "string",
                    "example": "approval_document.pdf"
                }
            }
        },
        "swagger.DisburseSchema": {
            "type": "object",
            "properties": {
                "agreement_file_name": {
                    "type": "string",
                    "example": "loan_agreement.pdf"
                },
                "field_officer_id": {
                    "type": "string",
                    "example": "emp-789"
                }
            }
        },
        "swagger.InvestSchema": {
            "type": "object",
            "properties": {
                "invest_amount": {
                    "type": "number",
                    "example": 5000
                },
                "lender_id": {
                    "type": "string",
                    "example": "lender-456"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:5002",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Loan Service API",
	Description:      "API for managing loans with a state machine workflow",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
